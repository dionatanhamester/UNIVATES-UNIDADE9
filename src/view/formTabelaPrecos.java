/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;


import java.awt.Color;
import java.util.Vector;
import javax.swing.text.MaskFormatter;

import util.CaixaDeDialogo;
import util.Uses;
import application.Main;
import classes.Tabelaprecos;

import classes.Produtos;
import classes.TabelaprecosId;
import classes.Tabelaprecosdetalhes;
import classes.TabelaprecosdetalhesId;
import controller.ProdutosDAO;
import controller.TabelaPrecosDAO;
import controller.TabelaPrecosDetalhesDAO;
import java.math.BigDecimal;
import java.util.Date;
import java.util.List;
import util.Convert;
import static view.formInicial.jframe_inicial;

/**
 *
 * @author Dionatan
 */
public class formTabelaPrecos extends javax.swing.JInternalFrame {    
    private final String _MODIFICACAO = "modificacao";
    private final String _DEFAULT     = "default";
    private int rowTabelaPrecosDetalhesClick = -1;
    private Tabelaprecos tabelaprecos = null;
    private TabelaPrecosDAO tabelaprecosDAO = new TabelaPrecosDAO();
    
    private Tabelaprecosdetalhes tabelaprecosdetalhes = null;
    private TabelaPrecosDetalhesDAO tabelaprecosdetalhesDAO = new TabelaPrecosDetalhesDAO();
    
    private ProdutosDAO produtosDAO = new ProdutosDAO();
    private Produtos produtoSelecionado = null;   
       
    private static CaixaDeDialogo mensagem;
    static int openFrameCount = 0;
    private String[] camposCombo = new String[1];
    private String[] ordenaCombo = new String[1];

    /**
     * Creates new form formTabelaPrecos
     */
    public formTabelaPrecos() {
         super("IFrame #" + (++openFrameCount),
                false, // resizable
                true, // closable
                false, // maximizable
                false);// iconifiable
        
        initComponents();
        Uses.center(this);
        carregaConfConsulta();     
        ajustaMascaraCampos();
        mensagem = CaixaDeDialogo.obterInstancia();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Tab_Selecao = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        gridConsulta = new javax.swing.JTable();
        cbCampos = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        cbOrdenacao = new javax.swing.JComboBox();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        Ed_Consulta = new javax.swing.JTextField();
        BotaoConsulta = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jTabbedPane = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        Ed_Nome = new javax.swing.JTextField();
        BotaoEditar = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        Ed_data = new javax.swing.JFormattedTextField();
        jPanel1 = new javax.swing.JPanel();
        Ed_Produto = new javax.swing.JTextField();
        F3_Produtos = new javax.swing.JButton();
        Ed_NomProduto = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        gridDetalhes = new javax.swing.JTable();
        Ed_Preco = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        BotaoEditarDetalhes = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        BotaoNovo = new javax.swing.JButton();
        BotaoGrava = new javax.swing.JButton();
        BotaoCancela = new javax.swing.JButton();
        BotaoExcluir = new javax.swing.JButton();

        setTitle("Cadastro de Tabelas de Preços");
        setPreferredSize(new java.awt.Dimension(526, 324));

        gridConsulta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Código", "Cliente", "Data"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        gridConsulta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gridConsultaMouseClicked(evt);
            }
        });
        gridConsulta.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                gridConsultaPropertyChange(evt);
            }
        });
        jScrollPane2.setViewportView(gridConsulta);

        cbCampos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel10.setText("Campo");

        cbOrdenacao.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel20.setText("Ordenação");

        jLabel21.setText("Consulta");

        BotaoConsulta.setText("Consultar");
        BotaoConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoConsultaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel10))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Ed_Consulta, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbOrdenacao, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BotaoConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(cbCampos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(Ed_Consulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(cbOrdenacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(BotaoConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE))
        );

        Tab_Selecao.addTab("Consulta", jPanel5);

        jPanel7.setPreferredSize(new java.awt.Dimension(672, 370));

        jLabel23.setText("Nome*");

        Ed_Nome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                Ed_NomeFocusLost(evt);
            }
        });

        BotaoEditar.setText("Editar");
        BotaoEditar.setFocusable(false);
        BotaoEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoEditarActionPerformed(evt);
            }
        });

        jLabel24.setText("Data Tabela*");

        Ed_data.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                Ed_dataFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(Ed_Nome, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74)
                        .addComponent(BotaoEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Ed_data, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel23))
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Ed_Nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(BotaoEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(Ed_data, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 143, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("Tabela Preços", jPanel7);

        Ed_Produto.setEditable(false);
        Ed_Produto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                Ed_ProdutoFocusLost(evt);
            }
        });

        F3_Produtos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/Pesquisar.png"))); // NOI18N
        F3_Produtos.setEnabled(false);
        F3_Produtos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                F3_ProdutosFocusLost(evt);
            }
        });
        F3_Produtos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                F3_ProdutosActionPerformed(evt);
            }
        });

        Ed_NomProduto.setEditable(false);
        Ed_NomProduto.setBackground(new java.awt.Color(153, 153, 153));
        Ed_NomProduto.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        gridDetalhes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Código", "Cliente", "Data"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        gridDetalhes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gridDetalhesMouseClicked(evt);
            }
        });
        gridDetalhes.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                gridDetalhesPropertyChange(evt);
            }
        });
        jScrollPane3.setViewportView(gridDetalhes);

        Ed_Preco.setEditable(false);
        Ed_Preco.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                Ed_PrecoFocusLost(evt);
            }
        });

        jLabel1.setText("Produto");

        jLabel2.setText("Preço");

        BotaoEditarDetalhes.setText("Editar");
        BotaoEditarDetalhes.setFocusable(false);
        BotaoEditarDetalhes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoEditarDetalhesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Ed_Produto, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(F3_Produtos, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Ed_Preco))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Ed_NomProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BotaoEditarDetalhes, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(Ed_Produto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Ed_Preco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(7, 7, 7)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Ed_NomProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BotaoEditarDetalhes, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(F3_Produtos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(168, 168, 168))
        );

        jTabbedPane.addTab("Detalhes", jPanel1);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 507, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
        );

        Tab_Selecao.addTab("Cadastro", jPanel6);

        jPanel8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        BotaoNovo.setText("Novo");
        BotaoNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoNovoActionPerformed(evt);
            }
        });

        BotaoGrava.setText("Gravar");
        BotaoGrava.setEnabled(false);
        BotaoGrava.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoGravaActionPerformed(evt);
            }
        });

        BotaoCancela.setText("Cancelar");
        BotaoCancela.setEnabled(false);
        BotaoCancela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoCancelaActionPerformed(evt);
            }
        });

        BotaoExcluir.setText("Excluir");
        BotaoExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addComponent(BotaoNovo, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotaoGrava, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotaoCancela)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotaoExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                .addGap(206, 206, 206))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(BotaoNovo)
                .addComponent(BotaoGrava, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(BotaoCancela, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(BotaoExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 545, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Tab_Selecao, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 294, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(1, 1, 1)
                    .addComponent(Tab_Selecao, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void gridConsultaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gridConsultaMouseClicked
        if (evt.getClickCount() == 2){
            int row = gridConsulta.getSelectedRow();

            if (row < 0){
                return;
            } else{
                //Posiciona certo no registro que o usuario clicou                
                try{
                    String sql = "FROM Tabelaprecos where tpempresa = "+String.valueOf(Main.empresaSelecionada.getEmcodigo())+" AND "
                               + " tpcodigo = " + gridConsulta.getValueAt(row, 0).toString();                     
                     List<Tabelaprecos> listTabelaPrecos = tabelaprecosDAO.consultaSQL(sql);
                    
                     if (listTabelaPrecos.size() > 0){
                        this.tabelaprecos = listTabelaPrecos.get(0) ;
                        arrumaBotoes(_DEFAULT);
                        Tab_Selecao.setSelectedIndex(1);                        
                        this.setDataTabelaPrecos();
                        carregaGridTabelaPrecosDetalhes();
                     }                     
                } catch (Exception ex) {
                    System.out.println(ex.getMessage());                    
                }
            }
        }
    }//GEN-LAST:event_gridConsultaMouseClicked

    /**
     * Ajusta a mascara dos campos( Melhor UX  do Usuário )
     */
    private void ajustaMascaraCampos(){
        try{
            MaskFormatter maskData = new MaskFormatter("##/##/####");    
            maskData.install(Ed_data);              
        }
        catch (Exception e){
            System.out.print(e.getMessage());
        }
    }
    
    private void gridConsultaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_gridConsultaPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_gridConsultaPropertyChange

    private void BotaoConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoConsultaActionPerformed
        //Monta a SQL para trazer os dados
        String[] vCampo = camposCombo[cbCampos.getSelectedIndex()].split(";");
        
        String vSQL = "FROM Tabelaprecos where tpcodigo is not null ";

        String vStr = Ed_Consulta.getText().trim();
        if (Ed_Consulta.getText().length() > 0){
            vSQL = vSQL + " AND UPPER(" + vCampo[1] + ") LIKE '%" + Ed_Consulta.getText().trim().toUpperCase() + "%' ";
        }

        String[] vOrdem = ordenaCombo[cbOrdenacao.getSelectedIndex()].split(";");
        vSQL = vSQL + "ORDER BY " + vOrdem[1];
        
        Uses.popularTabela(gridConsulta, vSQL, Tabelaprecos.class);           
    }//GEN-LAST:event_BotaoConsultaActionPerformed

    /**
     * Carregas as informações de detalhes da tabela , parao grid ( Com base na tabela de preços selecionada )
     */
    private void carregaGridTabelaPrecosDetalhes(){
        //Monta  SQL para trazer os dados                
        String vSQL = "FROM Tabelaprecosdetalhes where tdempresa = "+String.valueOf(tabelaprecos.getId().getTpempresa())+" and tdtabelapreco = "+String.valueOf(tabelaprecos.getId().getTpcodigo());
        Uses.popularTabela(gridDetalhes, vSQL, Tabelaprecosdetalhes.class);                  
    }
    
    
    private void Ed_NomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Ed_NomeFocusLost
        Ed_Nome.setBackground(Color.WHITE);
    }//GEN-LAST:event_Ed_NomeFocusLost

    private void BotaoEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoEditarActionPerformed
        arrumaBotoes(_MODIFICACAO);
    }//GEN-LAST:event_BotaoEditarActionPerformed

    private void BotaoNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoNovoActionPerformed
                           
        if (jTabbedPane.getSelectedIndex() == 0)/*Tabela de Preços*/{            
          tabelaprecos = new Tabelaprecos();          
          limpaTelaTabelaPrecos();  
          Tab_Selecao.setSelectedIndex(1);
          Ed_Nome.grabFocus();
          
        } else if (jTabbedPane.getSelectedIndex() == 1)/*Tabela de Preços - Detalhes*/{
            tabelaprecosdetalhes = new Tabelaprecosdetalhes();                        
            limpaTelaTabelaPrecosDetalhes();
            Ed_Produto.grabFocus();            
        }        
        arrumaBotoes(_MODIFICACAO);          
    }//GEN-LAST:event_BotaoNovoActionPerformed

    private void BotaoGravaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoGravaActionPerformed
        if (jTabbedPane.getSelectedIndex() == 0)/*Tabela de Preços*/{
            if (! validarCamposTabelaPrecos() ){
                
                mensagem.exibirMensagem(jframe_inicial,"Todos os campos obrigatórios devem ser preenchidos. Verifique!",'i');
            
            } else { //Segue com o salvar dados.
                try {               
                    salvarDadosTabelaPrecos();
                
                    mensagem.exibirMensagem(jframe_inicial,"Registro gravado com sucesso",'i');
                   
                    arrumaBotoes(_DEFAULT);
                    BotaoNovo.grabFocus();
                } catch (Exception e) {

                    System.out.println(e.getMessage());

                    mensagem.exibirMensagem(jframe_inicial, "Não foi possível gravar as informações. Tente novamente mais tarde!", 'e');
                }                              
            }
        } else if (jTabbedPane.getSelectedIndex() == 1)/*Tabela de Preços - Detalhes*/{
            
            if (! validarCamposTabelaPrecosDetalhes() ){
                
                mensagem.exibirMensagem(jframe_inicial,"Todos os campos obrigatórios devem ser preenchidos. Verifique!",'i');
            
            } else { //Segue com o salvar dados.
             try {               
                    salvarDadosTabelaPrecosDetalhes();
                
                    mensagem.exibirMensagem(jframe_inicial,"Registro gravado com sucesso",'i');
                    carregaGridTabelaPrecosDetalhes();
                    arrumaBotoes(_DEFAULT);
                    limpaTelaTabelaPrecosDetalhes();
                    BotaoNovo.grabFocus();
                } catch (Exception e) {

                    System.out.println(e.getMessage());

                    mensagem.exibirMensagem(jframe_inicial, "Não foi possível gravar as informações. Tente novamente mais tarde!", 'e');
                }     
            }            
        }  
    }//GEN-LAST:event_BotaoGravaActionPerformed

    /*
    Responsável por Salvar dos dados inseridos ou alterados pelo Usuário
    */
    private void salvarDadosTabelaPrecos() throws Exception{
        
        tabelaprecos.setTpnome(Ed_Nome.getText().trim());        
        tabelaprecos.setTpobs("");
        tabelaprecos.setTpdatatabela(new Date());
                                                
        if (tabelaprecos.getId() == null){
            TabelaprecosId id = new TabelaprecosId(Main.empresaSelecionada.getEmcodigo(), tabelaprecosDAO.getAutoIncrement());
                        
            tabelaprecos.setId(id);
            tabelaprecosDAO.Insert(tabelaprecos);
        } else {
            tabelaprecosDAO.Update(tabelaprecos);
        }                              
    }
    
    /*
    Responsável por Salvar dos dados inseridos ou alterados pelo Usuário
    */
    private void salvarDadosTabelaPrecosDetalhes() throws Exception{       
        tabelaprecosdetalhes.setTdpreco(BigDecimal.valueOf(Double.valueOf(Ed_Preco.getText().trim())));                                                      
        
        if (tabelaprecosdetalhes.getId() == null){  
            TabelaprecosdetalhesId tabeladetalheId = new TabelaprecosdetalhesId(Main.empresaSelecionada.getEmcodigo(),
                                                                                tabelaprecos.getId().getTpcodigo(),
                                                                                produtoSelecionado.getId().getPrcodigo()
                                                                                );       
            tabelaprecosdetalhes.setId(tabeladetalheId);
            tabelaprecosdetalhesDAO.Insert(tabelaprecosdetalhes);
        } else {
            tabelaprecosdetalhesDAO.Update(tabelaprecosdetalhes);
        }  
    }
    
    private void BotaoCancelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoCancelaActionPerformed
        arrumaBotoes(_DEFAULT);
                
        if (jTabbedPane.getSelectedIndex() == 0)/*Tabela de Preços*/{            
            setDataTabelaPrecos();
        } else if (jTabbedPane.getSelectedIndex() == 0)/*Tabela de Preços - Detalhes*/{                 
            
        }
    }//GEN-LAST:event_BotaoCancelaActionPerformed
 /*
    Responsável por apresentar os dados na tela do usuário
    */
    private void setDataTabelaPrecos(){          
        Ed_Nome.setText(tabelaprecos.getTpnome());
        Ed_data.setText(Convert.dateToString(tabelaprecos.getTpdatatabela(), "dd/MM/yyyy"));        
    }
 /*
    Responsável por apresentar os dados na tela do usuário
    */
    private void setDataTabelaPrecosDetalhes(){          
        Ed_Produto.setText(String.valueOf(tabelaprecosdetalhes.getId().getTdproduto()));
        Ed_Preco.setText(String.valueOf(tabelaprecosdetalhes.getTdpreco()));
        Ed_NomProduto.setText(produtoSelecionado.getPrnome());        
    }
    /**
     * Retira todas as informações de dados que podem estar sendo apresentadas ao usuário
     */
    private void limpaTelaTabelaPrecos(){
        Ed_Nome.setText("");        
        Ed_data.setText("");                
    }
    /**
     * Retira todas as informações de dados que podem estar sendo apresentadas ao usuário
     */
    private void limpaTelaTabelaPrecosDetalhes(){
        Ed_Produto.setText("");        
        Ed_Preco.setText("");                
        Ed_NomProduto.setText("");
    }
    
    private void BotaoExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoExcluirActionPerformed

      
        if (mensagem.pedirConfirmacao(jframe_inicial,"Você deseja mesmo excluir o registro?") == true)
        {
            try{
                if (jTabbedPane.getSelectedIndex() == 0)/*Tabela de Preços*/{
                    tabelaprecosDAO.Delete(tabelaprecos);
                    tabelaprecos = null;
                    
                    limpaTelaTabelaPrecos();
                    arrumaBotoes(_DEFAULT);    
                } else if (jTabbedPane.getSelectedIndex() == 1)/*Tabela de Preços - Detalhes*/{
                   tabelaprecosdetalhesDAO.Delete(tabelaprecosdetalhes);
                   tabelaprecosdetalhes = null;
                   
                   limpaTelaTabelaPrecosDetalhes();
                   arrumaBotoes(_DEFAULT);
                   carregaGridTabelaPrecosDetalhes();
                }
           } catch (Exception erro){
                mensagem.exibirMensagem(jframe_inicial,"Erro ao excluir a filial.Verifique" + erro.getMessage(),'e');
            }
        }
    }//GEN-LAST:event_BotaoExcluirActionPerformed

    private void Ed_dataFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Ed_dataFocusLost
        Ed_data.setBackground(Color.WHITE);
    }//GEN-LAST:event_Ed_dataFocusLost

    private void F3_ProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_F3_ProdutosActionPerformed
        String vSQL = "FROM Produtos where prcodigo is not null ";
                
        Uses.ChamaTelaPesquisa(Ed_Produto, vSQL, Produtos.class); 
    }//GEN-LAST:event_F3_ProdutosActionPerformed

    private void F3_ProdutosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_F3_ProdutosFocusLost
        
    }//GEN-LAST:event_F3_ProdutosFocusLost

    private void gridDetalhesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gridDetalhesMouseClicked
        rowTabelaPrecosDetalhesClick = gridDetalhes.getSelectedRow();
        getTabelaPrecosDetalhes_Produto();
    }//GEN-LAST:event_gridDetalhesMouseClicked

    private void gridDetalhesPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_gridDetalhesPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_gridDetalhesPropertyChange

    private void Ed_ProdutoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Ed_ProdutoFocusLost
        Ed_Produto.setBackground(Color.WHITE);
        buscaProdutoAposF3();
    }//GEN-LAST:event_Ed_ProdutoFocusLost
    private void buscaProdutoAposF3(){
                try{            
            if (! Main.vValorPesquisa.equals("")){
                Ed_Produto.setText(Main.vValorPesquisa);                                
                //zera a variavel;
                Main.vValorPesquisa = "";
            }
            if (!Ed_Produto.getText().toString().trim().equals("")){
                if (tabelaprecosdetalhesDAO.jaExiste(tabelaprecos.getId().getTpempresa(), tabelaprecos.getId().getTpcodigo(), Integer.valueOf(Ed_Produto.getText().toString().trim()))){
                    mensagem.exibirMensagem(jframe_inicial, "O produto já existe na tabela de preços. Verifique!", 'i');            
                    produtoSelecionado = null;                            
                    Ed_Produto.setText("");
                    Ed_Produto.grabFocus();
                } else {
                    produtoSelecionado = produtosDAO.getProduto(Main.empresaSelecionada.getEmcodigo(), Integer.valueOf(Ed_Produto.getText().toString().trim()));    
                    Ed_NomProduto.setText(produtoSelecionado.getPrnome());    
                }                                
            } else {
                produtoSelecionado = null;                        
            }                                   
        } catch (Exception e){
            mensagem.exibirMensagem(jframe_inicial,"Ocorreu um erro durante a localização do produto.Verifique!" + "\n" + e.getMessage(), 'e');            
        }
    }
    private void BotaoEditarDetalhesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoEditarDetalhesActionPerformed
        arrumaBotoes(_MODIFICACAO);
    }//GEN-LAST:event_BotaoEditarDetalhesActionPerformed

    private void Ed_PrecoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Ed_PrecoFocusLost
        Ed_Preco.setBackground(Color.WHITE);        
    }//GEN-LAST:event_Ed_PrecoFocusLost
    
    /**
     * Busca as informações de tabela de preços detalhes e atualiza no grid e dados do produto selecionado
     */
    private void getTabelaPrecosDetalhes_Produto(){
        //Posiciona certo no registro que o usuario clicou
        String vSQL = "From Tabelaprecosdetalhes "
                     + "where "
                     + " tdempresa = "+ String.valueOf(tabelaprecos.getId().getTpempresa())
                     + " and tdtabelapreco = "+ String.valueOf(tabelaprecos.getId().getTpcodigo())
                     + " and tdproduto = "+gridDetalhes.getValueAt(rowTabelaPrecosDetalhesClick, 0).toString();
                        
                try{
                    List<Tabelaprecosdetalhes> detalhes = tabelaprecosdetalhesDAO.consultaSQL(vSQL);

                    if (detalhes.size() > 0){                            
                        this.tabelaprecosdetalhes = detalhes.get(0);
                                                
                        produtoSelecionado = produtosDAO.getProduto(tabelaprecosdetalhes.getId().getTdempresa(), tabelaprecosdetalhes.getId().getTdproduto());
                        this.setDataTabelaPrecosDetalhes();                        
                    } else
                    {
                        //como nao tem nada
                    }                
                } catch (Exception ex) {
                    System.out.println(ex.getMessage());                    
                }              
    }
    /**
     * Carrega o  JCombobox com as informações para pesquisa de dados
     */
    public void carregaConfConsulta()
    {
        String[] vStr = null;
        //função responsavel por carregar os campos da tela de consulta        
        camposCombo[0] = "Nome;TPNOME";
        
        cbCampos.removeAllItems();
        for (int i = 0; i < camposCombo.length; i++)
        {
            vStr = camposCombo[i].split(";");
            cbCampos.addItem(vStr[0]);
        }

        //função responsavel por carregar os campos da tela de consulta        
        ordenaCombo[0] = "Nome;TPNOME";

        cbOrdenacao.removeAllItems();
        for (int i = 0; i < ordenaCombo.length; i++)
        {
            vStr = ordenaCombo[i].split(";");
            cbOrdenacao.addItem(vStr[0]);
        }
    }
    
    /**
     * Verifica se os campos obrigatórios foram preenchidos
     * @return boolean
     */    
    private boolean validarCamposTabelaPrecos(){
        boolean vReturn = true;
        
        if (Ed_Nome.getText().toString().equals("")){
            Ed_Nome.setBackground(Color.RED); 
            vReturn = false;
        }
        
        if (Ed_data.getText().toString().equals("  /  /    ")){
            Ed_data.setBackground(Color.RED); 
            vReturn = false;
        }    
        
        return vReturn;
    }
    
    /**
     * Verifica se os campos obrigatórios foram preenchidos
     * @return boolean
     */    
    private boolean validarCamposTabelaPrecosDetalhes(){
        boolean vReturn = true;
        
        if (Ed_Produto.getText().toString().equals("")){
            Ed_Produto.setBackground(Color.RED); 
            vReturn = false;
        }
        
        if (Ed_Preco.getText().toString().equals("")){
            Ed_Preco.setBackground(Color.RED); 
            vReturn = false;
        }    
        
        return vReturn;
    }
    
    /**
     * Ajusta a apresentação dos botoes de ação
     */
    private void arrumaBotoes(String estado)
    {
        //modificação quer dizer que a tabela vai estar em modo de edição ou inserção
        if (estado.equals(_MODIFICACAO)){
            BotaoNovo.setEnabled(false);
            BotaoGrava.setEnabled(true);
            BotaoCancela.setEnabled(true);
            BotaoExcluir.setEnabled(false);
            BotaoEditar.setEnabled(false);
            BotaoEditarDetalhes.setEnabled(false);
            permiteEdicao(true);
        } else if (estado.equals(_DEFAULT)) {
            BotaoNovo.setEnabled(true);
            BotaoGrava.setEnabled(false);
            BotaoCancela.setEnabled(false);
            BotaoExcluir.setEnabled(true);
            BotaoEditar.setEnabled(true);
            BotaoEditarDetalhes.setEnabled(true);
            permiteEdicao(false);
        }
    }
    
    /**
     * Ajusta a possibilidade de alteração das informações em determinado JTextField
     * @param vEstado 
     */
    private void permiteEdicao(boolean vEstado)
    {
        if (jTabbedPane.getSelectedIndex() == 0)/*Tabela de Preços*/{            
            Ed_Nome.setEditable(vEstado);
            Ed_data.setEditable(vEstado);
        } else if (jTabbedPane.getSelectedIndex() == 1)/*Tabela de Preços - Detalhes*/{                 
            Ed_Produto.setEditable(vEstado);
            Ed_Preco.setEditable(vEstado);
            F3_Produtos.setEnabled(vEstado);
        }        
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotaoCancela;
    private javax.swing.JButton BotaoConsulta;
    private javax.swing.JButton BotaoEditar;
    private javax.swing.JButton BotaoEditarDetalhes;
    private javax.swing.JButton BotaoExcluir;
    private javax.swing.JButton BotaoGrava;
    private javax.swing.JButton BotaoNovo;
    private javax.swing.JTextField Ed_Consulta;
    private javax.swing.JTextField Ed_NomProduto;
    private javax.swing.JTextField Ed_Nome;
    private javax.swing.JTextField Ed_Preco;
    private javax.swing.JTextField Ed_Produto;
    private javax.swing.JFormattedTextField Ed_data;
    private javax.swing.JButton F3_Produtos;
    private javax.swing.JTabbedPane Tab_Selecao;
    private javax.swing.JComboBox cbCampos;
    private javax.swing.JComboBox cbOrdenacao;
    private javax.swing.JTable gridConsulta;
    private javax.swing.JTable gridDetalhes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane;
    // End of variables declaration//GEN-END:variables
}
